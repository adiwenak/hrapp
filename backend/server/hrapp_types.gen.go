// Package server provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.13.0 DO NOT EDIT.
package server

const (
	CookieAuthScopes = "cookieAuth.Scopes"
)

// Defines values for RequestGenerateVerificationCodeChannel.
const (
	Email  RequestGenerateVerificationCodeChannel = "email"
	Mobile RequestGenerateVerificationCodeChannel = "mobile"
)

// Error defines model for Error.
type Error struct {
	Code    int32  `json:"code"`
	Message string `json:"message"`
}

// Login defines model for Login.
type Login struct {
	Email    string `json:"email" validate:"email"`
	Password string `json:"password" validate:"required,min=4,max=20"`
}

// Organisation defines model for Organisation.
type Organisation struct {
	Name string `json:"name" validate:"required,min=2,max=50"`
}

// RequestChangePassword defines model for RequestChangePassword.
type RequestChangePassword struct {
	Newpassword      string `json:"newpassword" validate:"required,min=8, max=30"`
	Oldpassword      string `json:"oldpassword" validate:"required"`
	VerificationCode string `json:"verificationCode" validate:"required,min=6"`
}

// RequestCreateUser defines model for RequestCreateUser.
type RequestCreateUser struct {
	Email        string `json:"email" validate:"email"`
	FirstName    string `json:"firstName" validate:"required,min=2,max=50"`
	LastName     string `json:"lastName"`
	MobileNumber string `json:"mobileNumber" validate:"required,min=6,max=20"`
	OrgId        int    `json:"orgId"`
	Username     string `json:"username" validate:"required,min=2,max=50"`
}

// RequestGenerateVerificationCode defines model for RequestGenerateVerificationCode.
type RequestGenerateVerificationCode struct {
	Channel RequestGenerateVerificationCodeChannel `json:"channel"`
}

// RequestGenerateVerificationCodeChannel defines model for RequestGenerateVerificationCode.Channel.
type RequestGenerateVerificationCodeChannel string

// ResponseCreateOrg defines model for ResponseCreateOrg.
type ResponseCreateOrg struct {
	Id   int    `json:"id"`
	Name string `json:"name" validate:"required,min=2,max=50"`
}

// ResponseCreateUser defines model for ResponseCreateUser.
type ResponseCreateUser struct {
	Email             string `json:"email" validate:"email"`
	FirstName         string `json:"firstName" validate:"required,min=2,max=50"`
	Id                int    `json:"id"`
	LastName          string `json:"lastName"`
	MobileNumber      string `json:"mobileNumber" validate:"required,min=6,max=20"`
	TemporaryPassword string `json:"temporaryPassword"`
	Username          string `json:"username" validate:"required,min=2,max=50"`
}

// User defines model for User.
type User struct {
	Email        string `json:"email" validate:"email"`
	FirstName    string `json:"firstName" validate:"required,min=2,max=50"`
	LastName     string `json:"lastName"`
	MobileNumber string `json:"mobileNumber" validate:"required,min=6,max=20"`
	Username     string `json:"username" validate:"required,min=2,max=50"`
}

// Users defines model for Users.
type Users = []User

// LoginJSONRequestBody defines body for Login for application/json ContentType.
type LoginJSONRequestBody = Login

// ChangeUserPasswordJSONRequestBody defines body for ChangeUserPassword for application/json ContentType.
type ChangeUserPasswordJSONRequestBody = RequestChangePassword

// GenerateVerificationCodeJSONRequestBody defines body for GenerateVerificationCode for application/json ContentType.
type GenerateVerificationCodeJSONRequestBody = RequestGenerateVerificationCode

// CreateOrganisationJSONRequestBody defines body for CreateOrganisation for application/json ContentType.
type CreateOrganisationJSONRequestBody = Organisation

// CreateUserJSONRequestBody defines body for CreateUser for application/json ContentType.
type CreateUserJSONRequestBody = RequestCreateUser
